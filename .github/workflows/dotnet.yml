# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Lab1
env:
  EB_PACKAGE_S3_BUCKET_NAME : "lab1-application-packages"
  EB_APPLICATION_NAME : "MyCICDLab1"
  EB_ENVIRONMENT_NAME : "MyCICDLab1-env"
  DEPLOY_PACKAGE_NAME : "Lab1_app_${{ github.sha }}.zip"
  AWS_REGION_NAME : "us-west-2"

on:
  push:
    branches: 
      - master

jobs:
  test_build_project:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: run a 1-line script
      run: echo Hello, world! Im work!
      
  My_CI:
    runs-on: ubuntu-latest
    needs: [test_build_project]
    
    steps:
    - name: Git clone repo
      uses: actions/checkout@v1
    - name : Create ZIP deploy package
      run : zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git* 
      #створення зіп пакету проекта з уникненням файлів гіта
      #закидую в бакет
      
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }} 
        aws-region :  ${{ env.AWS_REGION_NAME }}
   
    - name: Copy Deployment package to S3 bucket
      run : aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }}  s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
      # закидаю архів в бакет на aws
      
    - name: Print some msg for CI finish
      run : echo "CI Pipeline part Finished successfully!"
      
  my_cd_part:
    runs-on: ubuntu-latest
    needs: [My_CI]
    
    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with: 
        aws-access-key-id : ${{ secrets.MY_AWS_ACCESS_KEY }}
        aws-secret-access-key : ${{ secrets.MY_AWS_SECRET_KEY }} 
        aws-region :  ${{ env.AWS_REGION_NAME }}
    - name: Create new ElasticBeanstalk App
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "Ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
        
    - name: Deploy new ElasticBeanstalk App Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "Ver-${{ github.sha }}"
    
    - name: Print some msg for CD finish
      run : echo "CD Pipeline part Finished successfully!"
   
   
